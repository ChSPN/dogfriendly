@page "/places"
@using Microsoft.AspNetCore.Components.QuickGrid
@using DogFriendly.Domain.Entitites
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@attribute [Authorize(Roles = "Admin")]
@inject DogFriendly.Infrastructure.Context.DogFriendlyContext DB
@inject NavigationManager NavigationManager
@inject DialogService DialogService

<PageTitle>Liste des lieux</PageTitle>

<NavBar Title="Liste des lieux" />
<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <p class="card-category">
                        <a href="place/create">Ajouter un lieu</a>
                        <RadzenUpload ChooseText="Importer des lieux"
                                      Multiple="false"
                                      Accept="application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                                      Url="/api/upload/places/import"
                                      Progress="OnUploadProgress"
                                      Complete="OnUploadComplete"
                                      Error="OnUploadError" />
                        <RadzenUpload ChooseText="Importer des photos"
                                      Multiple="true"
                                      Accept="image/*"
                                      Url="/api/upload/places/photos"
                                      Progress="OnUploadProgress"
                                      Complete="OnUploadComplete"
                                      Error="OnUploadError" />
                    </p>
                    <RadzenProgressBar 
                        Value="100" 
                        ShowValue="false" 
                        Mode="ProgressBarMode.Indeterminate" 
                        class="rz-mt-12" 
                        Visible=@ShowProgress />
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <QuickGrid Class="table" Pagination=@Pagination Items="DB.Places.Include(p => p.PlaceType)">
                            <PropertyColumn Title="Nom" Sortable="true" Property="placeentity => placeentity.Name" />
                            <PropertyColumn Title="Adresse" Sortable="true" Property="placeentity => placeentity.Address" />
                            <PropertyColumn Title="Ville" Sortable="true" Property="placeentity => placeentity.City" />
                            <PropertyColumn Title="Code postal" Sortable="true" Property="placeentity => placeentity.PostalCode" />
                            <PropertyColumn Title="Pays" Sortable="true" Property="placeentity => placeentity.Country" />
                            <PropertyColumn Title="Type" Sortable="true" Property="placeentity => placeentity.PlaceType.Name" />
                            <TemplateColumn Context="placeentity">
                                <a href="@($"place/edit?id={placeentity.Id}")">Modifier</a> |
                                <a href="@($"place/details?id={placeentity.Id}")">Détails</a> |
                                <a href="@($"place/delete?id={placeentity.Id}")">Supprimer</a>
                            </TemplateColumn>
                        </QuickGrid>
                        <Paginator State=@Pagination />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code
{
    /// <summary>
    /// Show in progress.
    /// </summary>
    protected bool ShowProgress { get; set; }

    /// <summary>
    /// Pagination state.
    /// </summary>
    protected PaginationState Pagination = new PaginationState
    {
        ItemsPerPage = 10
    };

    /// <summary>
    /// On upload progress event.
    /// </summary>
    /// <param name="args">Arguments.</param>
    protected void OnUploadProgress(UploadProgressArgs args)
    {
        ShowProgress = true;
    }

    /// <summary>
    /// On upload complete event.
    /// </summary>
    /// <param name="args">Arguments.</param>
    protected void OnUploadComplete(UploadCompleteEventArgs args)
    {
        ShowProgress = false;
        NavigationManager.Refresh(true);
    }

    /// <summary>
    /// On upload error event.
    /// </summary>
    /// <param name="error">Errors.</param>
    protected void OnUploadError(UploadErrorEventArgs error)
    {
        ShowProgress = false;
        DialogService.Alert("Une erreur est survenue lors de l'import des lieux, veuillez retenter.", "Import des lieux", new AlertOptions { OkButtonText = "OK" });
    }
}
