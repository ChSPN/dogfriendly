@page "/review/create"
@using DogFriendly.Admin.Services
@using DogFriendly.Domain.Entitites
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@attribute [Authorize(Roles = "Admin")]
@inject DogFriendly.Infrastructure.Context.DogFriendlyContext DB
@inject NavigationManager NavigationManager
@inject AuthenticationService Authentication

<PageTitle>Créer un avis</PageTitle>

<h1>Création</h1>

<h4>Avis sur un lieu</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="ReviewEntity" OnValidSubmit="AddReviewEntity" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="comment" class="form-label">Commentaire :</label> 
                <InputText id="comment" @bind-Value="ReviewEntity.Comment" class="form-control" /> 
                <ValidationMessage For="() => ReviewEntity.Comment" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="rating" class="form-label">Note :</label> 
                <InputNumber id="rating" @bind-Value="ReviewEntity.Rating" class="form-control" /> 
                <ValidationMessage For="() => ReviewEntity.Rating" class="text-danger" /> 
            </div>
            <div class="mb-3">
                <label for="placeid" class="form-label">Identifiant du lieu :</label>
                <InputNumber id="placeid" @bind-Value="ReviewEntity.PlaceId" class="form-control" />
                <ValidationMessage For="() => ReviewEntity.PlaceId" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="userid" class="form-label">Identifiant de l'utilisateur :</label>
                <InputNumber id="userid" @bind-Value="ReviewEntity.UserId" class="form-control" /> 
                <ValidationMessage For="() => ReviewEntity.UserId" class="text-danger" /> 
            </div>           
            <button type="submit" class="btn btn-primary">Enregistrer</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/reviews">Liste des avis</a>
</div>

@code {

    [SupplyParameterFromForm]
    public ReviewEntity ReviewEntity { get; set; }

    protected override void OnInitialized()
    {
        ReviewEntity = new ReviewEntity
        {
            CreatedAt = DateTimeOffset.UtcNow,
            CreatedBy = Authentication?.Identity?.FindFirst(ClaimTypes.Email)?.Value,
        };
    }

    public async Task AddReviewEntity()
    {
        DB.Reviews.Add(ReviewEntity);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/reviews");
    }
}
