@page "/favoritelist/details"
@using DogFriendly.Domain.Entitites
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]
@inject DogFriendly.Infrastructure.Context.DogFriendlyContext DB
@inject NavigationManager NavigationManager

<PageTitle>Détails de la liste de favoris</PageTitle>

<h1>Détails</h1>

<div>
    <h4>Liste de favoris</h4>
    <hr />
    @if (favoritelistentity is null)
    {
        <p><em>Chargement de la liste ...</em></p>
    }
    else 
    {
        <dl class="row">
            <dt class="col-sm-2">Nom</dt>
            <dd class="col-sm-10">@favoritelistentity.Name</dd>
            <dt class="col-sm-2">Commentaire</dt>
            <dd class="col-sm-10">@favoritelistentity.Comment</dd>
            <dt class="col-sm-2">Utilisateur</dt>
            <dd class="col-sm-10">@favoritelistentity.User.Name</dd>
            <dt class="col-sm-2">Créé le</dt>
            <dd class="col-sm-10">@favoritelistentity.CreatedAt</dd>
            <dt class="col-sm-2">Créé par</dt>
            <dd class="col-sm-10">@favoritelistentity.CreatedBy</dd>
            <dt class="col-sm-2">Modifié le</dt>
            <dd class="col-sm-10">@favoritelistentity.UpdatedAt</dd>
            <dt class="col-sm-2">Modifié par</dt>
            <dd class="col-sm-10">@favoritelistentity.UpdatedBy</dd>
            <dt class="col-sm-2">Lieux</dt>
            <dd class="col-sm-10">
                @if (favoritelistentity.PlaceFavorites?.Any() == true)
                {
                    foreach (var place in favoritelistentity.PlaceFavorites)
                    {
                        <span> @place.Place.Name </span>
                    }
                }
                else
                {
                    <span>Aucun lieu</span>
                }
            </dd>
        </dl>
        <div>
            <a href="@($"/favoritelist/edit?id={favoritelistentity.Id}")">Modifier</a> |
            <a href="@($"/favoritelist")">Liste des favoris</a>
        </div>
    }
</div>

@code {
    FavoriteListEntity? favoritelistentity;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        favoritelistentity = await DB.Favorites
            .Include(f => f.User)
            .Include(f => f.PlaceFavorites)
            .ThenInclude(pf => pf.Place)
            .FirstOrDefaultAsync(m => m.Id == Id);

        if (favoritelistentity is null)
        {
            NavigationManager.NavigateTo("/favoritelist");
        }
    }
}
