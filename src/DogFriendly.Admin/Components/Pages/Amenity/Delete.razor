@page "/amenity/delete"
@using DogFriendly.Domain.Entitites
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]
@inject DogFriendly.Infrastructure.Context.DogFriendlyContext DB
@inject NavigationManager NavigationManager

<PageTitle>Suppression d'un équipement</PageTitle>

<NavBar Title="Suppresion d'un équipement" />
<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <p class="card-category">
                        Etes-vous sur de vouloir supprimer cet équipement ?
                    </p>
                </div>
                <div class="card-body">
                    @if (AmenityEntity is null)
                    {
                        <p><em>Chargement de l'équipement ...</em></p>
                    }
                    else
                    {
                        <dl class="row">
                            <dt class="col-sm-2">Icone</dt>
                            <dd class="col-sm-10">@AmenityEntity.IconUri</dd>
                        </dl>
                        <dl class="row">
                            <dt class="col-sm-2">Nom</dt>
                            <dd class="col-sm-10">@AmenityEntity.Name</dd>
                        </dl>
                        <dl class="row">
                            <dt class="col-sm-2">Créé le</dt>
                            <dd class="col-sm-10">@AmenityEntity.CreatedAt</dd>
                        </dl>
                        <dl class="row">
                            <dt class="col-sm-2">Créé par</dt>
                            <dd class="col-sm-10">@AmenityEntity.CreatedBy</dd>
                        </dl>
                        <dl class="row">
                            <dt class="col-sm-2">Modifié le</dt>
                            <dd class="col-sm-10">@AmenityEntity.UpdatedAt</dd>
                        </dl>
                        <dl class="row">
                            <dt class="col-sm-2">Modifié par</dt>
                            <dd class="col-sm-10">@AmenityEntity.UpdatedBy</dd>
                        </dl>
                        <EditForm method="post" Model="AmenityEntity" OnValidSubmit="DeleteAmenityEntity" FormName="delete" Enhance>
                            <button type="submit" class="btn btn-danger" disabled="@(AmenityEntity is null)">Supprimer</button> |
                            <a href="/amenities">Liste des équipements</a>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code
{
    /// <summary>
    /// Entity of the amenity to delete
    /// </summary>
    protected AmenityEntity? AmenityEntity;

    /// <summary>
    /// Id of the amenity to delete
    /// </summary>
    [SupplyParameterFromQuery]
    public int Id { get; set; }

    /// <summary>
    /// Initialize the component
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        AmenityEntity = await DB.Amenities.FirstOrDefaultAsync(m => m.Id == Id);

        if (AmenityEntity is null)
        {
            NavigationManager.NavigateTo("/amenities");
        }
    }

    /// <summary>
    /// Delete the amenity entity
    /// </summary>
    /// <returns></returns>
    public async Task DeleteAmenityEntity()
    {
        var placeAmenities = await DB.PlaceAmenities
        .Where(p => p.AmenityId == AmenityEntity.Id)
        .ToListAsync();
        if (placeAmenities.Count > 0)
        {
            DB.PlaceAmenities.RemoveRange(placeAmenities);
        }
        DB.Amenities.Remove(AmenityEntity!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/amenities");
    }
}
